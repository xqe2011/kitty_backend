
name: 自动部署测试环境代码和文档

on:
  push:
    branches:
      - "test"

jobs:
  build_and_deploy_test:
    runs-on: ubuntu-latest
    
    services:
      mariadb:
          image: mariadb:latest
          env:
            MARIADB_DATABASE: kitty
            MARIADB_USER: kitty
            MARIADB_PASSWORD: 123456
            MARIADB_ROOT_PASSWORD: 123456
          ports:
            - 3306
          options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 17
      - name: Install package dependencies
        run: npm install --save
      - name: Install global dependencies
        run: npm i -g @nestjs/cli
      - name: Wait mariadb to start
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"${{ job.services.mariadb.ports[3306] }}" --silent; do
            sleep 1
          done
      - name: Generate .env
        run: |
          mv default.env .env
          sed -i -e 's/; database.port=3306/database.port=${{ job.services.mariadb.ports[3306] }}/g' .env
      - name: Build documentation
        run: npm run build:docs
      - name: Build package
        run: rm -rf build && nest build
      - name: Build docker image
        run: |
          cp -R dist package.json package-lock.json docker/backend/app
          cp -R docs/* docker/backend_docs/dist
          mv docker/docker-compose.test.yml docker/docker-compose.yml
          mv docker/mariadb/certs.test docker/mariadb/certs
          rm -rf docker/mariadb/certs.release docker/docker-compose.release.yml
          sed -i -e 's/${QINIU_ACCESS_KEY}/${{ secrets.QINIU_ACCESS_KEY }}/g' docker/docker-compose.yml
          sed -i -e 's/${QINIU_SECRET_KEY}/${{ secrets.QINIU_SECRET_KEY }}/g' docker/docker-compose.yml
          sed -i -e 's/${WECHAT_APP_ID}/${{ secrets.WECHAT_APP_ID }}/g' docker/docker-compose.yml
          sed -i -e 's/${WECHAT_APP_SECRET}/${{ secrets.WECHAT_APP_SECRET }}/g' docker/docker-compose.yml
      - name: Stop container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_TENCENT1_HOST }}
          username: ${{ secrets.SERVER_TENCENT1_USERNAME }}
          key: ${{ secrets.SERVER_TENCENT1_KEY }}
          port: ${{ secrets.SERVER_TENCENT1_PORT }}
          script: |
            ([ -f "apps/test-kitty/docker-compose.yml" ] && cd apps/test-kitty && docker-compose down) || true
      - name: Upload to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_TENCENT1_HOST }}
          username: ${{ secrets.SERVER_TENCENT1_USERNAME }}
          key: ${{ secrets.SERVER_TENCENT1_KEY }}
          port: ${{ secrets.SERVER_TENCENT1_PORT }}
          rm: true
          strip_components: 1
          source: "docker/*"
          target: "apps/test-kitty"
      - name: Start container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_TENCENT1_HOST }}
          username: ${{ secrets.SERVER_TENCENT1_USERNAME }}
          key: ${{ secrets.SERVER_TENCENT1_KEY }}
          port: ${{ secrets.SERVER_TENCENT1_PORT }}
          script: |
            cd apps/test-kitty
            docker-compose build
            docker-compose up -d

